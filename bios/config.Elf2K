#++
# config.Elf2K - Configuration for Spare Time Gizmos Elf 2000 EPROM
#
# Copyright (C) 2021 by Spare Time Gizmos.  All rights reserved.
#
# This Makefile is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA  02111-1307  USA
#
#DESCRIPTION:
#   This file is included by the main STG EPROM Makefile and it defines the
# actual software components present and the memory layout used by the Elf2K
# EPROM.  If you want to change what's included the EPROM - e.g. if you want to
# eliminate Forth, or if you want to move things around in memory - then change
# this file.  The main reason why this is done thru the Makefile rather than the
# assembler is because Make needs to know which files to assemble and combine
# into the EPROM image.
#
# Original EPROM Memory Map (in 2K increments)
# ---------------
#	$8000 .. $97FF	- Monitor    (24 pages)
#	$9800 .. $9FFF  - VT52       ( 8 pages)
#	$A000 .. $A8FF	- HELP       ( 9 pages)
#       $A900 .. $ABFF	- SEDIT      ( 3 pages)
#	$AC00 .. $AFFF  - XMODEM     ( 4 pages)
#       $B000 .. $BCFF	- EDTASM     (13 pages)
#	$BD00 .. $BEFF  - free       ( 2 pages)
#       $BF00 .. $CFFF  - VISUAL/02  (17 pages)
#	$D000 .. $E9FF	- rc/BASIC   (26 pages)
#       $EA00 .. $EFFF  - free       ( 6 pages)
#       $F000 .. $F1FF  - free       ( 2 pages)
#	$F200 .. $FFFF	- BIOS       (14 pages)
#
# Modified map
#       $8000 .. $97FF - Monitor (24 pages)
#       $9800 .. $A0FF - Help (9 pages)
#       $A100 .. $AFFF - Forth (15 pages)
#       $B000 .. $BCFF - EDTASM (13 pages)
#       $BD00 .. $BEFF - free (2 pages)
#       $BF00 .. $CFFF - VISUAL/02 (17 pages)
#       $D000 .. $E9FF - rc/BASIC (26 pages)
#       $EA00 .. $EDFF - XMODEM (4 pages)
#       $EE00 .. $F1FF - free (4 pages)
#       $F200 .. $FFFF - BIOS (14 pages)

# Modified map (with enhanced Forth)
#       $8000 .. $93FF - Monitor (19 pages)
#       $9400 .. $9AFF - Help (7 pages)
#       $9B00 .. $B2FF - Forth (needs more for pure ascii extended words; less for no BLOAD)
#       $B300 .. $BFFF - EDTASM (13 pages)
#       $C000 .. $D0FF - VISUAL/02 (17 pages)
#       $D100 .. $EAFF - rc/BASIC (26 pages)
#       $EB00 .. $EEFF - XMODEM (4 pages)
#       $EF00 .. $F1FF - free 
#       $F200 .. $FFFF - BIOS (14 pages; not all actually used)

# REVISION HISTORY:
# dd-mmm-yy	who     description
#  3-Jan-21	RLA	Create new Elf2K config from PicoElf config
#--

#   These variables define where the STG monitor loads and the page of RAM that
# is allocated for the monitor's use. This location, $8000, is pretty much cast
# in stone because the both the Elf2K and the PicoElf hardware forces a startup
# at this location after a hard reset. It's included here only for completeness
# and you can't ever change it!
BOOTS=08000H			# where the monitor lives
WARMB=($(strip $(BOOTS))+3)	# monitor warm start entry point 
RAMPAGE=07F00H			# one page of RAM for the monitor's use

#   The VT52 emulator, which works with the Elf 2000 80 column Video card,
# occupies 2K of EPROM and normally it's located just above the monitor.  The
# VT52 emulator also requires 2K of SRAM for the frame buffer (80 characters
# by 24 rows is 2000 bytes), which is usually located at the top of RAM just
# below the monitor's data page.  BTW, if the video card isn't installed then
# this memory never gets used by the VT52 emulator, and can be used for other
# purposes...
#VIDEO=09800H			# where the VT52 emulator lives
#INIT75=($(strip $(VIDEO)))	# VT1802 initialization entry point
#VTPUTC=($(strip $(VIDEO))+3)	# VT1802 character output entry point
#SCREEN=($(strip $(RAMPAGE))-2048)# 2K of screen memory used by the VT1802

# Defining PIXIE (the actual value doesn't matter) includes the CDP1861 code ...
#PIXIE=1861H

#   The help text for the Elf 2000 monitor is fairly big - it takes over
# 2K of memory, and isn't actually needed to use the Elf 2000.  It's really
# handy, however, and if there's room we want to keep it!
HELP=09400H			# where the help text lives

#   Mike's 1802 BIOS is used by the monitor, by the various languages present
# in the EPROM (Forth, BASIC, Editor/Assembler, etc), and by Mike's 1802 disk
# operating system, Elf0S.  Once again you're pretty much stuck with this, and
# you really can't change this location!
BIOS=0FF00H			# Mike's 1802 BIOS vector table
EBIOS=0F800H			# Extended BIOS for the Elf 2000

#   Mike Riley's Editor/Assembler, Forth and L2 BASIC interpreters can also
# share the EPROM - defining any of the following symbols enables the
# corresponding monitor command and loads the component into the EPROM image.
# This works but I want to push Forth to the top to use free space for extended words
#EDTASM=0B300H			# 1802 Editor/Assembler
#VISUAL=0C000H			# Visual/02 interactive debugger
#BASIC=0D100H			# Level 2 BASIC interpreter
#XMODEM=0EB00H			# Xmodem shared end and receive code
#FORTH=09B00H


EDTASM=09C00H			# 1802 Editor/Assembler
VISUAL=0A900H			# Visual/02 interactive debugger
BASIC=0BA00H			# Level 2 BASIC interpreter
XMODEM=0D400H			# Xmodem shared end and receive code
FORTH=0D700H
